config {
  type: "incremental",
  schema: "tcc_silver",
  description: "Tabela com dados tratados sobre o resumo do setor de transporte aÃ©reo em termos de demanda e oferta.",
  tags: ["silver","anac","oferta_demanda_aerea"],
  bigquery: {
    labels: {
      frequencia: "mensal",
      carga: "incremental"
    },
    partitionBy: "DATE_TRUNC(ano_particao, YEAR)",
    clusterBy: ["aeroporto_destino_sigla"]
  },
}

pre_operations {
  DECLARE ano_particao_checkpoint DEFAULT (
    ${when(incremental(),
    `SELECT max(ano_particao) FROM ${self()}`,
    `SELECT DATE("1999-01-01")`)}
  )
}

SELECT DISTINCT
  SHA256(
    CONCAT(ANO, MES, EMPRESA_SIGLA_, EMPRESA_NACIONALIDADE_, 
          AEROPORTO_DE_ORIGEM_SIGLA_, AEROPORTO_DE_ORIGEM_PAIS_, 
          AEROPORTO_DE_ORIGEM_NOME_, AEROPORTO_DE_DESTINO_SIGLA_, 
          AEROPORTO_DE_DESTINO_PAIS_, NATUREZA, GRUPO_DE_VOO
          )
  )                                                     AS hash_key,
  DATE(CAST(ANO AS INT64), CAST(MES AS INT64), 01)      AS data_registro,
  EMPRESA_SIGLA_                                        AS empresa_sigla,
  EMPRESA_NOME_                                         AS empresa_nome,
  EMPRESA_NACIONALIDADE_                                AS empresa_nacionalidade,
  NATUREZA                                              AS natureza_voo,
  GRUPO_DE_VOO                                          AS tipo_voo,
  AEROPORTO_DE_ORIGEM_SIGLA_                            AS aeroporto_origem_sigla,
  AEROPORTO_DE_ORIGEM_NOME_                             AS aeroporto_origem_nome,
  AEROPORTO_DE_ORIGEM_UF_                               AS aeroporto_origem_uf,
  AEROPORTO_DE_ORIGEM_PAIS_                             AS aeroporto_origem_pais,
  AEROPORTO_DE_DESTINO_SIGLA_                           AS aeroporto_destino_sigla,
  AEROPORTO_DE_DESTINO_NOME_                            AS aeroporto_destino_nome,
  AEROPORTO_DE_DESTINO_UF_                              AS aeroporto_destino_uf,
  AEROPORTO_DE_DESTINO_PAIS_                            AS aeroporto_destino_pais,
  CAST(REPLACE(PASSAGEIROS_PAGOS, ".0", "") AS INT64)   AS passageiros_pagos,
  CAST(REPLACE(PASSAGEIROS_GRATIS, ".0", "") AS INT64)  AS passageiros_gratis,
  SAFE_CAST(CARGA_PAGA_KG_ AS FLOAT64)                       AS carga_paga_kg,
  SAFE_CAST(CARGA_GRATIS_KG_ AS FLOAT64)                     AS carga_gratis_kg,
  SAFE_CAST(CORREIO_KG_ AS FLOAT64)                          AS correio_kg,
  SAFE_CAST(ASK AS FLOAT64)                                  AS ask_assentos_ofercidos_km,
  SAFE_CAST(RPK AS FLOAT64)                                  AS rpk_passageiros_transportados_km,
  SAFE_CAST(ATK AS FLOAT64)                                  AS atk_toneladas_ofercidas_km,
  SAFE_CAST(RTK AS FLOAT64)                                  AS rtk_toneladas_transportadas_km,
  SAFE_CAST(COMBUSTIVEL_LITROS_ AS FLOAT64)                  AS combustivel_litros,
  SAFE_CAST(DISTANCIA_VOADA_KM_ AS FLOAT64)                  AS distancia_voada_km,
  CAST(REPLACE(DECOLAGENS, ".0", "") AS INT64)               AS decolagens,
  SAFE_CAST(CARGA_PAGA_KM AS FLOAT64)                        AS carga_paga_km,
  SAFE_CAST(CARGA_GRATIS_KM AS FLOAT64)                      AS carga_gratis_km,
  SAFE_CAST(CORREIO_KM AS FLOAT64)                           AS correio_km,
  CAST(REPLACE(ASSENTOS, ".0", "") AS INT64)            AS assentos,
  CAST(PAYLOAD AS FLOAT64)                              AS capacidade_total_aeronave_kg,
  CAST(REPLACE(HORAS_VOADAS, ",", ".") AS FLOAT64)      AS horas_voadas,
  CAST(BAGAGEM_KG_ AS FLOAT64)                          AS bagagem_kg,
  ano_particao
FROM
  ${ref("tcc_bronze","anac_oferta_demanda_aerea")}
WHERE
  AEROPORTO_DE_ORIGEM_SIGLA_ != "N/I"
${when(incremental(), 
`AND ano_particao = ano_particao_checkpoint
 AND DATE(CAST(ANO AS INT64), CAST(MES AS INT64), 01) > (SELECT MAX(data_registro) FROM ${self()})`)}


